// Mocks generated by Mockito 5.4.4 from annotations
// in approach_to_charge/test/application/usecases/call_catlist_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:approach_to_charge/domain/entity/cat.dart' as _i6;
import 'package:approach_to_charge/domain/repository/cat_repository.dart'
    as _i2;
import 'package:approach_to_charge/domain/repository/error/cat_error.dart'
    as _i5;
import 'package:either_dart/either.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCatRepository extends _i1.Mock implements _i2.CatRepository {
  MockCatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<_i5.CatError, List<_i6.Cat>>> getCatListByEither({
    int? limit = 10,
    required int? page,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCatListByEither,
          [],
          {
            #limit: limit,
            #page: page,
          },
        ),
        returnValue: _i3.Future<_i4.Either<_i5.CatError, List<_i6.Cat>>>.value(
            _i7.dummyValue<_i4.Either<_i5.CatError, List<_i6.Cat>>>(
          this,
          Invocation.method(
            #getCatListByEither,
            [],
            {
              #limit: limit,
              #page: page,
            },
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.CatError, List<_i6.Cat>>>);
}
